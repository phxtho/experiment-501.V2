{"version":3,"sources":["components/editor/schema/index.ts","components/editor/plugins/index.ts","components/editor/editor.tsx","components/canvas/card.tsx","components/canvas/constants.ts","components/canvas/canvas.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["calcYchangeDomAttrs","attrs","domAttrs","Object","assign","ychange","ychange_user","user","ychange_state","state","nodes","doc","content","paragraph","default","group","parseDOM","tag","toDOM","node","blockquote","defining","horizontal_rule","heading","level","code_block","marks","code","preserveWhitespace","text","image","inline","src","alt","title","draggable","getAttrs","dom","getAttribute","hard_break","selectable","schema","Schema","link","href","inclusive","em","style","strong","fontWeight","value","test","basicPlugins","exampleSetup","menuBar","ydoc","Y","provider","WebrtcProvider","type","getXmlFragment","Editor","ySyncPlugin","yCursorPlugin","awareness","yUndoPlugin","keymap","undo","redo","concat","props","editorRef","useRef","useState","setEditorView","useEffect","editorProps","EditorState","create","plugins","handleDOMEvents","focus","view","event","transaction","tr","setMeta","dispatch","onFocus","blur","onBlur","editorView","EditorView","current","id","ref","Card","useDrag","item","collect","monitor","isDragging","drag","className","display","hideSourceOnDrag","opacity","top","y","left","x","ItemTypes","CanvasContainer","DndProvider","backend","HTML5Backend","Canvas","mousePos","setMousePos","cards","setCards","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","moveCardPosition","removeCard","restOfCards","update","$merge","onMouseMove","e","nativeEvent","offsetX","offsetY","onDoubleClick","newCard","uuidv4","createCard","debug","color","entries","map","index","card","onRemove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.617c55e8.chunk.js","sourcesContent":["import {\n  Node as ProsemirrorNode,\n  Mark,\n  Schema,\n  DOMOutputSpecArray,\n} from \"prosemirror-model\";\n\nconst calcYchangeDomAttrs = (attrs: any, domAttrs: any = {}) => {\n  domAttrs = Object.assign({}, domAttrs);\n  if (attrs.ychange !== null) {\n    domAttrs.ychange_user = attrs.ychange.user;\n    domAttrs.ychange_state = attrs.ychange.state;\n  }\n  return domAttrs;\n};\n\n// :: Object\n// [Specs](#model.NodeSpec) for the nodes defined in this schema.\nexport const nodes = {\n  // :: NodeSpec The top level document node.\n  doc: {\n    content: \"block+\",\n  },\n\n  // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n  // as a `<p>` element.\n  paragraph: {\n    attrs: { ychange: { default: null } },\n    content: \"inline*\",\n    group: \"block\",\n    parseDOM: [{ tag: \"p\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"p\", calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n  blockquote: {\n    attrs: { ychange: { default: null } },\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{ tag: \"blockquote\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"blockquote\", calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A horizontal rule (`<hr>`).\n  horizontal_rule: {\n    attrs: { ychange: { default: null } },\n    group: \"block\",\n    parseDOM: [{ tag: \"hr\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"hr\", calcYchangeDomAttrs(node.attrs)];\n    },\n  },\n\n  // :: NodeSpec A heading textblock, with a `level` attribute that\n  // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n  // `<h6>` elements.\n  heading: {\n    attrs: {\n      level: { default: 1 },\n      ychange: { default: null },\n    },\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [\n      { tag: \"h1\", attrs: { level: 1 } },\n      { tag: \"h2\", attrs: { level: 2 } },\n      { tag: \"h3\", attrs: { level: 3 } },\n      { tag: \"h4\", attrs: { level: 4 } },\n      { tag: \"h5\", attrs: { level: 5 } },\n      { tag: \"h6\", attrs: { level: 6 } },\n    ],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"h\" + node.attrs.level, calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A code listing. Disallows marks or non-text inline\n  // nodes by default. Represented as a `<pre>` element with a\n  // `<code>` element inside of it.\n  code_block: {\n    attrs: { ychange: { default: null } },\n    content: \"text*\",\n    marks: \"\",\n    group: \"block\",\n    code: true,\n    defining: true,\n    parseDOM: [{ tag: \"pre\", preserveWhitespace: \"full\" as \"full\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"pre\", calcYchangeDomAttrs(node.attrs), [\"code\", 0]];\n    },\n  },\n\n  // :: NodeSpec The text node.\n  text: {\n    group: \"inline\",\n  },\n\n  // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n  // `alt`, and `href` attributes. The latter two default to the empty\n  // string.\n  image: {\n    inline: true,\n    attrs: {\n      ychange: { default: null },\n      src: {},\n      alt: { default: null },\n      title: { default: null },\n    },\n    group: \"inline\",\n    draggable: true,\n    parseDOM: [\n      {\n        tag: \"img[src]\",\n        getAttrs(dom: Element) {\n          return {\n            src: dom.getAttribute(\"src\"),\n            title: dom.getAttribute(\"title\"),\n            alt: dom.getAttribute(\"alt\"),\n          };\n        },\n      },\n    ],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      const domAttrs = {\n        src: node.attrs.src,\n        title: node.attrs.title,\n        alt: node.attrs.alt,\n      };\n      return [\"img\", calcYchangeDomAttrs(node.attrs, domAttrs)];\n    },\n  },\n\n  // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n  hard_break: {\n    inline: true,\n    group: \"inline\",\n    selectable: false,\n    parseDOM: [{ tag: \"br\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"br\"];\n    },\n  },\n};\n\n// :: Object [Specs](#model.MarkSpec) for the marks in the schema.\nexport const marks = {\n  // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n  // defaults to the empty string. Rendered and parsed as an `<a>`\n  // element.\n  link: {\n    attrs: {\n      href: {},\n      title: { default: null },\n    },\n    inclusive: false,\n    parseDOM: [\n      {\n        tag: \"a[href]\",\n        getAttrs(dom: Element) {\n          return {\n            href: dom.getAttribute(\"href\"),\n            title: dom.getAttribute(\"title\"),\n          };\n        },\n      },\n    ],\n    toDOM(node: Mark): DOMOutputSpecArray {\n      return [\"a\", node.attrs, 0];\n    },\n  },\n\n  // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n  // Has parse rules that also match `<i>` and `font-style: italic`.\n  em: {\n    parseDOM: [{ tag: \"i\" }, { tag: \"em\" }, { style: \"font-style=italic\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"em\", 0];\n    },\n  },\n\n  // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n  // also match `<b>` and `font-weight: bold`.\n  strong: {\n    parseDOM: [\n      { tag: \"strong\" },\n      // This works around a Google Docs misbehavior where\n      // pasted content will be inexplicably wrapped in `<b>`\n      // tags with a font-weight normal.\n      {\n        tag: \"b\",\n        getAttrs: (node: any) => node.style.fontWeight !== \"normal\" && null,\n      },\n      {\n        style: \"font-weight\",\n        getAttrs: (value: string) =>\n          /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\n      },\n    ],\n    toDOM(): DOMOutputSpecArray {\n      return [\"strong\", 0];\n    },\n  },\n\n  // :: MarkSpec Code font mark. Represented as a `<code>` element.\n  code: {\n    parseDOM: [{ tag: \"code\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"code\", 0];\n    },\n  },\n  ychange: {\n    attrs: {\n      user: { default: null },\n      state: { default: null },\n    },\n    inclusive: false,\n    parseDOM: [{ tag: \"ychange\" }],\n    toDOM(node: Mark): DOMOutputSpecArray {\n      return [\n        \"ychange\",\n        { ychange_user: node.attrs.user, ychange_state: node.attrs.state },\n        0,\n      ];\n    },\n  },\n};\n\n// :: Schema\n// This schema rougly corresponds to the document schema used by\n// [CommonMark](http://commonmark.org/), minus the list elements,\n// which are defined in the [`prosemirror-schema-list`](#schema-list)\n// module.\n//\n// To reuse elements from this schema, extend or read from its\n// `spec.nodes` and `spec.marks` [properties](#model.Schema.spec).\nexport const schema = new Schema({ nodes, marks });\n","import { exampleSetup } from \"prosemirror-example-setup\";\nimport { schema } from \"../schema\";\nimport { Plugin } from \"prosemirror-state\";\nimport * as Y from \"yjs\";\nimport { WebrtcProvider } from \"y-webrtc\";\nimport {\n  ySyncPlugin,\n  yCursorPlugin,\n  yUndoPlugin,\n  undo,\n  redo,\n} from \"y-prosemirror\";\nimport { keymap } from \"prosemirror-keymap\";\n\nexport const basicPlugins: Plugin[] = exampleSetup({\n  schema: schema,\n  menuBar: false,\n});\n\nconst ydoc = new Y.Doc();\nconst provider = new WebrtcProvider(\"prosemirror-debug\", ydoc);\nconst type = ydoc.getXmlFragment(\"prosemirror\");\n\nexport const yjsPlugins: Plugin[] = [\n  ySyncPlugin(type),\n  yCursorPlugin(provider.awareness),\n  yUndoPlugin(),\n  keymap({\n    \"Mod-z\": undo,\n    \"Mod-y\": redo,\n    \"Mod-Shift-z\": redo,\n  }),\n].concat(basicPlugins);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { EditorState } from \"prosemirror-state\";\nimport { DirectEditorProps, EditorView } from \"prosemirror-view\";\nimport { schema } from \"./schema\";\nimport { basicPlugins } from \"./plugins\";\nimport \"./editor.css\";\n\ninterface EditorProps {\n  onFocus?;\n  onBlur?;\n}\n\nconst Editor = (props: EditorProps) => {\n  const editorRef = useRef();\n  const [, setEditorView] = useState<EditorView>(null);\n\n  // Initialise the editor view\n  useEffect(() => {\n    const editorState = EditorState.create({\n      schema: schema,\n      plugins: basicPlugins,\n    });\n\n    const editorProps: DirectEditorProps = {\n      state: editorState,\n      handleDOMEvents: {\n        focus: (view: EditorView, event: FocusEvent) => {\n          const transaction = view.state.tr.setMeta(\"focused\", true);\n          view.dispatch(transaction);\n          props.onFocus && props.onFocus();\n          return false;\n        },\n        blur: (view: EditorView, event: FocusEvent) => {\n          const transaction = view.state.tr.setMeta(\"focused\", false);\n          view.dispatch(transaction);\n          props.onBlur && props.onBlur();\n          return false;\n        },\n      },\n    };\n\n    const editorView = new EditorView(editorRef.current, editorProps);\n    setEditorView(editorView);\n  }, []);\n\n  return (\n    <div id=\"editorContainer\">\n      <div id=\"editor\" ref={editorRef}></div>\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport Editor from \"../editor/editor\";\nimport { CanvasCard } from \"./constants\";\n\ndeclare interface CardProps {\n  item: CanvasCard;\n  onRemove;\n  hideSourceOnDrag: boolean;\n}\n\nconst Card = (props: CardProps) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: props.item,\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      id={props.item.id}\n      ref={drag}\n      className=\"card\"\n      style={{\n        display: isDragging && props.hideSourceOnDrag ? \"none\" : \"flex\",\n        opacity: isDragging ? 0.5 : 1,\n        top: props.item.y,\n        left: props.item.x,\n      }}\n    >\n      <Editor />\n    </div>\n  );\n};\n\nexport default Card;\n","export const ItemTypes = {\n  CARD: \"card\",\n};\n\nexport interface CanvasCard {\n  type: string;\n  id: string;\n  // The x,y co-ords of the element\n  x: number;\n  y: number;\n}\n","import React, { useState } from \"react\";\nimport { DndProvider, useDrop, XYCoord } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Card from \"./card\";\nimport { ItemTypes, CanvasCard } from \"./constants\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport update from \"immutability-helper\";\nimport \"./canvas.css\";\n\nconst CanvasContainer = () => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Canvas />\n    </DndProvider>\n  );\n};\n\nexport default CanvasContainer;\n\nconst Canvas = (props) => {\n  const [mousePos, setMousePos] = useState<XYCoord>({ x: 0, y: 0 });\n\n  const [cards, setCards] = useState<{\n    [key: string]: CanvasCard;\n  }>({});\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item: CanvasCard, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const x = Math.round(item.x + delta.x);\n      const y = Math.round(item.y + delta.y);\n      moveCardPosition(item.id, x, y);\n      return { x, y };\n    },\n  });\n\n  const createCard = (x: number, y: number) => {\n    const newCard: CanvasCard = {\n      type: ItemTypes.CARD,\n      id: uuidv4(),\n      x: x,\n      y: y,\n    };\n    setCards({ ...cards, [newCard.id]: newCard });\n  };\n\n  const removeCard = (id: string) => {\n    const { [id]: oldCard, ...restOfCards } = cards;\n    setCards(restOfCards);\n  };\n\n  const moveCardPosition = (id: string, x: number, y: number) => {\n    setCards(\n      update(cards, {\n        [id]: {\n          $merge: { x, y },\n        },\n      })\n    );\n  };\n\n  return (\n    <div\n      className=\"canvas\"\n      ref={drop}\n      onMouseMove={(e) => {\n        setMousePos({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      }}\n      onDoubleClick={(e) => {\n        createCard(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      }}\n    >\n      {props.debug && (\n        <span style={{ color: \"white\" }}>\n          x: {mousePos.x},y: {mousePos.y}\n        </span>\n      )}\n      {Object.entries(cards).map(([key, card], index) => (\n        <Card key={index} item={card} hideSourceOnDrag onRemove={removeCard} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport Canvas from \"./components/canvas/canvas\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}