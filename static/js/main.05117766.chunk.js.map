{"version":3,"sources":["components/card/card.tsx","model/interfaces.ts","components/editor/schema/index.ts","components/editor/plugins/index.ts","components/editor/editor.tsx","db/pouch/notes.ts","components/editor/container.tsx","store/index.ts","components/canvas/canvas.tsx","components/note-list/note-list.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","useDrag","item","collect","monitor","isDragging","drag","preview","id","ref","className","style","display","hideSourceOnDrag","opacity","top","y","left","x","children","ItemTypes","calcYchangeDomAttrs","attrs","domAttrs","Object","assign","ychange","ychange_user","user","ychange_state","state","nodes","doc","content","paragraph","default","group","parseDOM","tag","toDOM","node","blockquote","defining","horizontal_rule","heading","level","code_block","marks","code","preserveWhitespace","text","image","inline","src","alt","title","draggable","getAttrs","dom","getAttribute","hard_break","selectable","schema","Schema","link","href","inclusive","em","strong","fontWeight","value","test","basicPlugins","exampleSetup","menuBar","ydoc","Y","provider","WebrtcProvider","type","getXmlFragment","Editor","ySyncPlugin","yCursorPlugin","awareness","yUndoPlugin","keymap","undo","redo","concat","onFocus","onBlur","onChange","editorRef","useRef","useState","editorView","setEditorView","generateEditorViewProps","useCallback","dispatchTransaction","tr","newState","this","apply","updateState","handleDOMEvents","focus","view","event","transaction","setMeta","dispatch","blur","generateEditorState","options","plugins","nodeFromJSON","selection","Selection","fromJSON","EditorState","create","useEffect","editorProps","EditorView","current","destroy","setProps","PouchDB","plugin","Upsert","db","inputDocument","a","docId","upsert","response","console","log","insertNote","meta","body","createdTime","lastEditedTime","newDocument","_id","uuidv4","Date","now","putIfNotExists","storedDocument","getNotes","allDocs","include_docs","result","rows","getNoteById","get","SET_NOTE","SET_NOTE_STATE","NEW_NOTE","reducer","note","payload","currentTime","Container","useReducer","localNote","initialiseNote","handleOnChange","toJSON","handleBlur","updateNote","ADD_ITEM_TO_CANVAS","REMOVE_ITEM_FROM_CANVAS","UPDATE_ITEM","openCanvas","items","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","find","update","$push","filter","oldItem","itemIdx","indexOf","$merge","CanvasContainer","DndProvider","backend","HTML5Backend","Canvas","setMousePos","cards","useSelector","useDispatch","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","moveCardPosition","createCard","newCard","onMouseMove","e","nativeEvent","offsetX","offsetY","onDoubleClick","entries","map","index","card","NoteList","allNotes","setAllNotes","fetchAllNotes","callback","changes","since","live","on","idx","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05117766.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { CanvasCard } from \"model/interfaces\";\nimport { VscGripper } from \"react-icons/vsc\";\nimport \"./card.css\";\n\ndeclare interface CardProps {\n  item: CanvasCard;\n  onRemove?;\n  hideSourceOnDrag?: boolean;\n  children?: any;\n}\n\nconst Card = (props: CardProps) => {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: props.item,\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      id={props.item.id}\n      ref={preview}\n      className=\"card\"\n      style={{\n        display: isDragging && props.hideSourceOnDrag ? \"none\" : \"flex\",\n        opacity: isDragging ? 0.5 : 1,\n        top: props.item.y,\n        left: props.item.x,\n      }}\n    >\n      <div\n        ref={drag}\n        id={`${props.item.id}-drag-handle`}\n        className=\"card-drag-handle\"\n      >\n        <VscGripper />\n      </div>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export const ItemTypes = {\n  CARD: \"card\",\n};\n\nexport interface CanvasCard {\n  type: string;\n  id: string;\n  // The x,y co-ords of the element\n  x: number;\n  y: number;\n}\n\nexport interface Canvas {\n  id: string;\n  title: string;\n  items: CanvasCard[];\n}\n\nexport interface Note {\n  id: string;\n  title: string;\n  createdTime: number;\n  lastEditedTime: number;\n  meta: object;\n  state: PMState;\n}\n\n// JSON serialised prosemirror state returned by state.toJSON()\nexport interface PMState {\n  doc: object;\n  selection: object;\n}\n","import {\n  Node as ProsemirrorNode,\n  Mark,\n  Schema,\n  DOMOutputSpecArray,\n} from \"prosemirror-model\";\n\nconst calcYchangeDomAttrs = (attrs: any, domAttrs: any = {}) => {\n  domAttrs = Object.assign({}, domAttrs);\n  if (attrs.ychange !== null) {\n    domAttrs.ychange_user = attrs.ychange.user;\n    domAttrs.ychange_state = attrs.ychange.state;\n  }\n  return domAttrs;\n};\n\n// :: Object\n// [Specs](#model.NodeSpec) for the nodes defined in this schema.\nexport const nodes = {\n  // :: NodeSpec The top level document node.\n  doc: {\n    content: \"block+\",\n  },\n\n  // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n  // as a `<p>` element.\n  paragraph: {\n    attrs: { ychange: { default: null } },\n    content: \"inline*\",\n    group: \"block\",\n    parseDOM: [{ tag: \"p\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"p\", calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n  blockquote: {\n    attrs: { ychange: { default: null } },\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{ tag: \"blockquote\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"blockquote\", calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A horizontal rule (`<hr>`).\n  horizontal_rule: {\n    attrs: { ychange: { default: null } },\n    group: \"block\",\n    parseDOM: [{ tag: \"hr\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"hr\", calcYchangeDomAttrs(node.attrs)];\n    },\n  },\n\n  // :: NodeSpec A heading textblock, with a `level` attribute that\n  // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n  // `<h6>` elements.\n  heading: {\n    attrs: {\n      level: { default: 1 },\n      ychange: { default: null },\n    },\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [\n      { tag: \"h1\", attrs: { level: 1 } },\n      { tag: \"h2\", attrs: { level: 2 } },\n      { tag: \"h3\", attrs: { level: 3 } },\n      { tag: \"h4\", attrs: { level: 4 } },\n      { tag: \"h5\", attrs: { level: 5 } },\n      { tag: \"h6\", attrs: { level: 6 } },\n    ],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"h\" + node.attrs.level, calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A code listing. Disallows marks or non-text inline\n  // nodes by default. Represented as a `<pre>` element with a\n  // `<code>` element inside of it.\n  code_block: {\n    attrs: { ychange: { default: null } },\n    content: \"text*\",\n    marks: \"\",\n    group: \"block\",\n    code: true,\n    defining: true,\n    parseDOM: [{ tag: \"pre\", preserveWhitespace: \"full\" as \"full\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"pre\", calcYchangeDomAttrs(node.attrs), [\"code\", 0]];\n    },\n  },\n\n  // :: NodeSpec The text node.\n  text: {\n    group: \"inline\",\n  },\n\n  // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n  // `alt`, and `href` attributes. The latter two default to the empty\n  // string.\n  image: {\n    inline: true,\n    attrs: {\n      ychange: { default: null },\n      src: {},\n      alt: { default: null },\n      title: { default: null },\n    },\n    group: \"inline\",\n    draggable: true,\n    parseDOM: [\n      {\n        tag: \"img[src]\",\n        getAttrs(dom: Element) {\n          return {\n            src: dom.getAttribute(\"src\"),\n            title: dom.getAttribute(\"title\"),\n            alt: dom.getAttribute(\"alt\"),\n          };\n        },\n      },\n    ],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      const domAttrs = {\n        src: node.attrs.src,\n        title: node.attrs.title,\n        alt: node.attrs.alt,\n      };\n      return [\"img\", calcYchangeDomAttrs(node.attrs, domAttrs)];\n    },\n  },\n\n  // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n  hard_break: {\n    inline: true,\n    group: \"inline\",\n    selectable: false,\n    parseDOM: [{ tag: \"br\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"br\"];\n    },\n  },\n};\n\n// :: Object [Specs](#model.MarkSpec) for the marks in the schema.\nexport const marks = {\n  // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n  // defaults to the empty string. Rendered and parsed as an `<a>`\n  // element.\n  link: {\n    attrs: {\n      href: {},\n      title: { default: null },\n    },\n    inclusive: false,\n    parseDOM: [\n      {\n        tag: \"a[href]\",\n        getAttrs(dom: Element) {\n          return {\n            href: dom.getAttribute(\"href\"),\n            title: dom.getAttribute(\"title\"),\n          };\n        },\n      },\n    ],\n    toDOM(node: Mark): DOMOutputSpecArray {\n      return [\"a\", node.attrs, 0];\n    },\n  },\n\n  // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n  // Has parse rules that also match `<i>` and `font-style: italic`.\n  em: {\n    parseDOM: [{ tag: \"i\" }, { tag: \"em\" }, { style: \"font-style=italic\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"em\", 0];\n    },\n  },\n\n  // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n  // also match `<b>` and `font-weight: bold`.\n  strong: {\n    parseDOM: [\n      { tag: \"strong\" },\n      // This works around a Google Docs misbehavior where\n      // pasted content will be inexplicably wrapped in `<b>`\n      // tags with a font-weight normal.\n      {\n        tag: \"b\",\n        getAttrs: (node: any) => node.style.fontWeight !== \"normal\" && null,\n      },\n      {\n        style: \"font-weight\",\n        getAttrs: (value: string) =>\n          /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\n      },\n    ],\n    toDOM(): DOMOutputSpecArray {\n      return [\"strong\", 0];\n    },\n  },\n\n  // :: MarkSpec Code font mark. Represented as a `<code>` element.\n  code: {\n    parseDOM: [{ tag: \"code\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"code\", 0];\n    },\n  },\n  ychange: {\n    attrs: {\n      user: { default: null },\n      state: { default: null },\n    },\n    inclusive: false,\n    parseDOM: [{ tag: \"ychange\" }],\n    toDOM(node: Mark): DOMOutputSpecArray {\n      return [\n        \"ychange\",\n        { ychange_user: node.attrs.user, ychange_state: node.attrs.state },\n        0,\n      ];\n    },\n  },\n};\n\n// :: Schema\n// This schema rougly corresponds to the document schema used by\n// [CommonMark](http://commonmark.org/), minus the list elements,\n// which are defined in the [`prosemirror-schema-list`](#schema-list)\n// module.\n//\n// To reuse elements from this schema, extend or read from its\n// `spec.nodes` and `spec.marks` [properties](#model.Schema.spec).\nexport const schema = new Schema({ nodes, marks });\n","import { exampleSetup } from \"prosemirror-example-setup\";\nimport { schema } from \"../schema\";\nimport { Plugin } from \"prosemirror-state\";\nimport * as Y from \"yjs\";\nimport { WebrtcProvider } from \"y-webrtc\";\nimport {\n  ySyncPlugin,\n  yCursorPlugin,\n  yUndoPlugin,\n  undo,\n  redo,\n} from \"y-prosemirror\";\nimport { keymap } from \"prosemirror-keymap\";\n\nexport const basicPlugins: Plugin[] = exampleSetup({\n  schema: schema,\n  menuBar: false,\n});\n\nconst ydoc = new Y.Doc();\nconst provider = new WebrtcProvider(\"prosemirror-debug\", ydoc);\nconst type = ydoc.getXmlFragment(\"prosemirror\");\n\nexport const yjsPlugins: Plugin[] = [\n  ySyncPlugin(type),\n  yCursorPlugin(provider.awareness),\n  yUndoPlugin(),\n  keymap({\n    \"Mod-z\": undo,\n    \"Mod-y\": redo,\n    \"Mod-Shift-z\": redo,\n  }),\n].concat(basicPlugins);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { EditorState, Selection } from \"prosemirror-state\";\nimport { DirectEditorProps, EditorView } from \"prosemirror-view\";\nimport { schema } from \"./schema\";\nimport { basicPlugins } from \"./plugins\";\nimport \"./editor.css\";\nimport { PMState } from \"model/interfaces\";\n\ninterface EditorProps {\n  onFocus?;\n  onBlur?;\n  onChange?;\n  state?: PMState;\n}\n\nconst Editor = (props: EditorProps) => {\n  const { onFocus, onBlur, onChange } = props;\n  const editorRef = useRef();\n  const [editorView, setEditorView] = useState<EditorView>(null);\n\n  const generateEditorViewProps = useCallback(() => {\n    return {\n      dispatchTransaction(tr) {\n        const newState = this.state.apply(tr);\n        this.updateState(newState);\n        onChange?.(this);\n      },\n      handleDOMEvents: {\n        focus: (view: EditorView, event: FocusEvent) => {\n          const transaction = view.state.tr.setMeta(\"focused\", true);\n          view.dispatch(transaction);\n          onFocus?.(editorView);\n          return false;\n        },\n        blur: (view: EditorView, event: FocusEvent) => {\n          const transaction = view.state.tr.setMeta(\"focused\", false);\n          view.dispatch(transaction);\n          onBlur?.(editorView);\n          return false;\n        },\n      },\n    };\n  }, [onChange, onBlur, onFocus, editorView]);\n\n  const generateEditorState = useCallback((): EditorState => {\n    let options: any = {\n      schema: schema,\n      plugins: basicPlugins,\n    };\n\n    if (props.state) {\n      options.doc = schema.nodeFromJSON(props.state.doc);\n      options.selection = Selection.fromJSON(\n        options.doc,\n        props.state.selection\n      );\n    }\n\n    return EditorState.create(options);\n  }, [props.state]);\n\n  // Initialise the editor view\n  useEffect(() => {\n    const editorProps: DirectEditorProps = {\n      state: generateEditorState(),\n      ...generateEditorViewProps(),\n    };\n\n    const editorView = new EditorView(editorRef.current, editorProps);\n    setEditorView(editorView);\n\n    return () => {\n      editorView.destroy();\n    };\n  }, []);\n\n  // Update the editor props to sync editor event callbacks\n  useEffect(() => {\n    editorView?.setProps(generateEditorViewProps());\n  }, [generateEditorViewProps, editorView]);\n\n  // Update editor state to sync with state prop\n  useEffect(() => {\n    editorView?.updateState(generateEditorState());\n  }, [generateEditorState, editorView]);\n\n  return (\n    <div id=\"editorContainer\">\n      <div id=\"editor\" ref={editorRef}></div>\n    </div>\n  );\n};\n\nexport default Editor;\n","import PouchDB from \"pouchdb\";\nimport Upsert from \"pouchdb-upsert\";\nimport { Note } from \"model/interfaces\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nPouchDB.plugin(Upsert);\nlet db = new PouchDB(\"notes\");\n\nexport async function updateNote(inputDocument: Note) {\n  try {\n    const docId = inputDocument.id || inputDocument[\"_id\"];\n    const response = await db.upsert(docId, (doc) => {\n      return inputDocument as Partial<PouchDB.Core.IdMeta>;\n    });\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't update ${error}`);\n  }\n}\n\n// Create a new note\nexport async function insertNote(\n  id?: string,\n  title?: string,\n  meta?: object,\n  body?: object,\n  createdTime?: string,\n  lastEditedTime?: string\n) {\n  try {\n    let newDocument = {\n      _id: id || uuidv4(),\n      title: title || null,\n      meta: meta || {},\n      body: body || {},\n      createdTime: createdTime || Date.now(),\n      lastEditedTime: lastEditedTime || Date.now(),\n    };\n\n    const storedDocument = await db.putIfNotExists(newDocument);\n    return storedDocument;\n  } catch (error) {\n    console.log(`ERROR: couldn't create doc ${error}`);\n  }\n}\n\nexport async function getNotes() {\n  try {\n    let result = await db.allDocs({ include_docs: true });\n    return result?.rows;\n  } catch (error) {\n    console.log(`ERROR fetching all notes ${error}`);\n  }\n}\n\nexport async function getNoteById(id: string) {\n  try {\n    const doc = await db.get(id);\n    return doc;\n  } catch (error) {\n    console.log(`ERROR fetching  ${id} ${error}`);\n  }\n}\n\nexport function onChange(callback) {\n  db.changes({\n    since: \"now\",\n    live: true,\n  }).on(\"change\", () => callback());\n}\n","/* Manage the editor's interaction with the db & global state */\nimport React, { useCallback, useEffect, useReducer } from \"react\";\nimport Editor from \"./editor\";\nimport { insertNote, updateNote, getNoteById } from \"db/pouch/notes\";\nimport { Note } from \"model/interfaces\";\nimport { EditorView } from \"prosemirror-view\";\n\ninterface EditorContainerProps {\n  id?: string;\n  note?: Note;\n}\n\nconst SET_NOTE = \"SET_NOTE\";\nconst SET_NOTE_STATE = \"SET_NOTE_STATE\";\nconst NEW_NOTE = \"NEW_NOTE\";\n\nconst reducer = (note: Note, { type, payload }) => {\n  switch (type) {\n    case SET_NOTE:\n      return payload;\n    case NEW_NOTE:\n      let currentTime = Date.now();\n      const newNote = {\n        ...payload,\n        createdTime: currentTime,\n        lastEditedTime: currentTime,\n      };\n      return newNote;\n    case SET_NOTE_STATE:\n      const updatedNote = {\n        ...note,\n        state: payload,\n        lastEditedTime: Date.now(),\n      };\n      return updatedNote;\n  }\n};\nconst Container = (props: EditorContainerProps) => {\n  const { note } = props;\n  const [localNote, dispatch] = useReducer(reducer, note);\n\n  const initialiseNote = useCallback(async () => {\n    if (props.id) {\n      // try fetch the note from the db\n      let doc = await getNoteById(props.id);\n      if (doc) {\n        dispatch({ type: SET_NOTE, payload: doc });\n      } else {\n        // No note found create one with the passed in id\n        const doc = await insertNote(props.id);\n        dispatch({ type: NEW_NOTE, payload: doc });\n      }\n    } else {\n      // No id create note with db generated id\n      const doc = await insertNote();\n      dispatch({ type: NEW_NOTE, payload: doc });\n    }\n  }, [props.id]);\n\n  // On init\n  useEffect(() => {\n    void initialiseNote();\n  }, [initialiseNote]);\n\n  const handleOnChange = useCallback((editorView: EditorView) => {\n    dispatch({\n      type: SET_NOTE_STATE,\n      payload: editorView?.state?.toJSON(),\n    });\n  }, []);\n\n  const handleBlur = useCallback(\n    (editorView: EditorView) => {\n      void updateNote(localNote);\n    },\n    [localNote]\n  );\n\n  return (\n    <>\n      <Editor\n        state={localNote?.state}\n        onChange={handleOnChange}\n        onBlur={handleBlur}\n      />\n    </>\n  );\n};\n\nexport default Container;\n","import { createStore, compose } from \"redux\";\nimport { Canvas } from \"model/interfaces\";\nimport update from \"immutability-helper\";\n\nexport const ADD_ITEM_TO_CANVAS = \"ADD_ITEM_TO_CANVAS\";\nexport const REMOVE_ITEM_FROM_CANVAS = \"REMOVE_ITEM_FROM_CANVAS\";\nexport const UPDATE_ITEM = \"UPDATE_ITEM_POSITION\";\n\nconst openCanvas: Canvas = {\n  id: \"randomID\",\n  title: \"Main Canvas\",\n  items: [],\n};\n\nconst reducer = function (\n  state = { openCanvas: openCanvas },\n  { type, payload }\n) {\n  switch (type) {\n    case ADD_ITEM_TO_CANVAS:\n      const { items } = state.openCanvas;\n      if (!items.find((item) => item.id === payload?.id)) {\n        state.openCanvas.items = update(items, { $push: [payload] });\n        return state;\n      }\n      return state;\n    case REMOVE_ITEM_FROM_CANVAS:\n      state.openCanvas.items = state.openCanvas.items.filter(\n        (item) => item.id !== payload?.id\n      );\n      return state;\n    case UPDATE_ITEM:\n      const oldItem = state.openCanvas.items.find(\n        (item) => item.id === payload?.id\n      );\n\n      if (!oldItem) {\n        return state;\n      }\n\n      const itemIdx = state.openCanvas.items.indexOf(oldItem);\n      state.openCanvas.items = update(state.openCanvas.items, {\n        [itemIdx]: { $merge: { ...payload } },\n      });\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ || compose;\nlet store = createStore(reducer, composeEnhancers());\n\nexport default store;\n","import React, { useCallback, useState } from \"react\";\nimport { DndProvider, useDrop, XYCoord } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Card from \"components/card/card\";\nimport { ItemTypes, CanvasCard } from \"model/interfaces\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EditorContainer from \"components/editor/container\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS, UPDATE_ITEM } from \"store\";\nimport \"./canvas.css\";\n\nfunction CanvasContainer() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Canvas />\n    </DndProvider>\n  );\n}\n\nexport default CanvasContainer;\n\nconst Canvas = (props) => {\n  const debug = false;\n  const [mousePos, setMousePos] = useState<XYCoord>({ x: 0, y: 0 });\n\n  const cards: CanvasCard[] = useSelector((state) => state.openCanvas.items);\n  const dispatch = useDispatch();\n\n  const [, drop] = useDrop({\n    accept: [ItemTypes.CARD],\n    drop: (item: CanvasCard, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const x = Math.round(item.x + delta.x);\n      const y = Math.round(item.y + delta.y);\n      moveCardPosition(item.id, x, y);\n\n      return { x, y };\n    },\n  });\n\n  const createCard = useCallback(\n    (x: number, y: number) => {\n      const newCard: CanvasCard = {\n        type: ItemTypes.CARD,\n        id: uuidv4(),\n        x: x,\n        y: y,\n      };\n      dispatch({ type: ADD_ITEM_TO_CANVAS, payload: newCard });\n    },\n    [dispatch]\n  );\n\n  const moveCardPosition = useCallback(\n    (id: string, x: number, y: number) => {\n      dispatch({ type: UPDATE_ITEM, payload: { id: id, x: x, y: y } });\n    },\n    [dispatch]\n  );\n\n  return (\n    <div\n      className=\"canvas\"\n      ref={drop}\n      onMouseMove={(e) => {\n        setMousePos({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      }}\n      onDoubleClick={(e) => {\n        createCard(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      }}\n    >\n      {debug && (\n        <span style={{ color: \"white\" }}>\n          x: {mousePos.x},y: {mousePos.y}\n        </span>\n      )}\n\n      {Object.entries(cards).map(([key, card], index) => (\n        <Card key={index} item={card} hideSourceOnDrag>\n          <EditorContainer id={card.id} />\n        </Card>\n      ))}\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\nimport { CanvasCard, ItemTypes } from \"model/interfaces\";\nimport \"./note-list.css\";\n\nconst NoteList = () => {\n  const [allNotes, setAllNotes] = useState([]);\n  const dispatch = useDispatch();\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = await getNotes();\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n  }, [fetchAllNotes]);\n\n  return (\n    <div className=\"note-list\">\n      {allNotes.map((note, idx) => (\n        <div\n          className=\"note-list-item\"\n          key={idx}\n          onClick={() => {\n            const item: CanvasCard = {\n              id: note?.id,\n              type: ItemTypes.CARD,\n              x: 690,\n              y: 320,\n            };\n            dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n          }}\n        >\n          {note.id}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default NoteList;\n","import React from \"react\";\nimport Canvas from \"components/canvas/canvas\";\nimport NoteList from \"components/note-list/note-list\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Canvas />\n        <NoteList />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}